apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.http.name | default ( printf "%s-http" (include "common.names.fullname" .)) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- with include "common.tplvalues.merge" ( dict "values" (list .Values.service.http.annotations .Values.commonAnnotations) "context" . ) | fromYaml }}
  annotations: {{- . | toYaml | nindent 4 }}
  {{- end }}
spec:
  type: {{ .Values.service.http.type }}
  {{- if or (eq .Values.service.http.type "LoadBalancer") (eq .Values.service.http.type "NodePort") }}
  externalTrafficPolicy: {{ .Values.service.http.externalTrafficPolicy | quote }}
  {{- end }}
  {{- if and (eq .Values.service.http.type "LoadBalancer") (not (empty .Values.service.http.loadBalancerSourceRanges)) }}
  loadBalancerSourceRanges: {{ .Values.service.http.loadBalancerSourceRanges }}
  {{- end }}
  {{- if and (eq .Values.service.http.type "LoadBalancer") (not (empty .Values.service.http.loadBalancerIP)) }}
  loadBalancerIP: {{ .Values.service.http.loadBalancerIP }}
  {{- end }}
  ports:
    - name: http
      port: {{ .Values.service.http.port }}
      {{- if and (eq .Values.service.http.type "NodePort" "LoadBalancer") (gt (.Values.service.http.nodePort | int) 0) }}
      nodePort: {{ .Values.service.http.nodePort }}
      {{- end }}
      targetPort: http
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) | fromYaml }}
  selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
